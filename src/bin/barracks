#!/usr/bin/env node

const program = require('commander');
const config = require('../config.js');
const pjson = require('../../package.json');

program.version(pjson.version);
  
if (config.v2Enabled) {
  program.command('login', 'Authenticate to Barracks')
    .command('logout', 'Logout from your Barracks account')
    .command('account', 'Get account information')
    .command('device [cmd]', 'Manage devices')
    .command('filter [cmd]', 'Manage filters')
    .command('package [cmd]', 'Manage packages')
    .command('token [cmd]', 'Manage tokens');

  if (config.experimental) {
    program.command('integration [cmd]', 'Manage third-party integrations');
  }
} else {
  program.command('login', 'Authenticate to Barracks')
    .command('logout', 'Logout from your Barracks account')
    .command('account', 'Get account information')
    .command('update [cmd]', 'Manage updates')
    .command('device [cmd]', 'Manage devices')
    .command('segment [cmd]', 'Manage segments')
    .command('token [cmd]', 'Manage tokens');

  if (config.experimental) {
    program.command('filter [cmd]', 'Manage filters')
      .command('integration [cmd]', 'Manage third-party integrations');
  }
}

program.command('check-update', 'Check for updates the same way a device would');

program.parse(process.argv);

process.on('SIGINT', () => {
  process.exit();
});
